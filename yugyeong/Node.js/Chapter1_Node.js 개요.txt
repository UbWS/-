<Chapter1_ Node.js 개요>

* Node.js : 서버 환경에서 작동하는 자바스크립트, 대규모 네트워크 애플리케이션 개발에 적합

* 스레드 : 프로세스(하나의 프로그램) 내부에서 실행되는 실행 흐름 단위
- 장점 : 사용자에 대한 응답성 향상, 동시 작업 완료 가능
- 사용해야 하는 경우 : 네트워크 웹 서버 또는 데이터베이스 통신, 시간이 오래 걸리는 작업

* 기존 네트워크 애플리케이션 VS Node.js로 개발한 네트워크 애플리케이션
- 기존 웹 서버 : 스레드 기반으로 하는 동기 방식으로 네트워크 입출력 처리
- Node.js 서버 : 이벤트 기반으로 하는 비동기 방식으로 네트워크 입출력 처리

* 스레드 기반 동기 방식
- 작업 요청이 들어올 때마다 스레드를 여러 개 만들어 동시에 일을 처리
- 일이 많아질수록 스레드를 더 많이 만들어야 하므로 메모리 사용량이 계속 증가하는 단점 존재

* 이벤트 기반 비동기 방식
- 스레드 하나로 이벤트를 사용하므로 빠른 속도로 일 처리 가능
- 메모리 사용량 변화가 거의 없음

* Node.js 장단점
- 장점
1) JavaScript를 사용함. 모든 웹 개발자가 쉽게 접근할 수 있음
2) 구글이 만드는 JavaScript 엔진을 사용함. 여러 웹 브라우저가 엔진 경쟁을 하며, 그 중 구글의 JavaScript엔진이 적극적으로 경쟁에 대응함
3) C++로 개발되어 기능 확장 가능

- 단점
1) 구글 V8 JavaScript 엔진이 아무리 빨라도 C, C++로 개발된 서버 애플리케이션보다 느림

* Node.js의 활용
- 이베이(eBay) : Node.js를 사용해 웹 API 배포
- 링크드인(LinkedIn) : 자사의 모든 서버를 Node.js를 사용해 구성
- 페이팔(PayPal), 트위터(Twitter), 국내 NHN, GS shop, SKT 등의 기업들에서 Node.js 채용하여 사용
- GitHub에서 제공하는 Atom 에디터는 Node.js로 만들어진 대표적인 데스크톱 애플리케이션